{"version":3,"sources":["components/login/Login.js","components/login/index.js"],"names":["eye","icon","faEye","Login","history","useHistory","useState","email","setEmail","password","setPassword","loading","setLoading","error","setError","passwordShown","setPasswordShown","useAuth","setAuthTokens","setUserData","setIsLogged","handleSubmit","event","a","preventDefault","trim","makePostReq","status","message","data","Toast","token","userData","localStorage","setItem","username","push","CHATS","className","to","HOME","Form","noValidate","onSubmit","Row","Group","controlId","Label","Control","type","placeholder","value","onChange","target","isInvalid","Feedback","onClick","Button","disabled","REGISTER","FORGOT_PASSWORD"],"mappings":"kPAYMA,EAAM,kBAAC,IAAD,CAAiBC,KAAMC,MA+FpBC,EA7FD,WACb,IAAMC,EAAUC,cADG,EAEOC,mBAAS,IAFhB,mBAEZC,EAFY,KAELC,EAFK,OAGaF,mBAAS,IAHtB,mBAGZG,EAHY,KAGFC,EAHE,OAIWJ,oBAAS,GAJpB,mBAIZK,EAJY,KAIHC,EAJG,OAKON,mBAAS,IALhB,mBAKZO,EALY,KAKLC,EALK,OAMuBR,oBAAS,GANhC,mBAMZS,EANY,KAMGC,EANH,OAQ+BC,cAA3CC,EARY,EAQZA,cAAeC,EARH,EAQGA,YAAaC,EARhB,EAQgBA,YAM7BC,EAAY,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,yDACpBD,EAAME,iBACe,KAAjBjB,EAAMkB,OAFU,gBAGnBX,EAAS,CAACP,MAAO,qCAHE,0BAIW,KAApBE,EAASgB,OAJA,gBAKnBX,EAAS,CAACL,SAAU,+BALD,8BAOnBG,GAAW,GAPQ,UAQmBc,YAAY,aAAc,CAACnB,QAAOE,aARrD,iBAQZkB,EARY,EAQZA,OAAQC,EARI,EAQJA,QAASC,EARL,EAQKA,KACxBC,YAAMH,EAAQC,GACC,OAAXD,IACGI,EADc,iBACIF,EAAKE,OAC7Bb,EAAca,GACdZ,EAAYU,EAAKG,UACjBC,aAAaC,QAAQ,WAAYL,EAAKG,SAASG,UAC/Cf,GAAY,GACZhB,EAAQgC,KAAKC,MAEdzB,GAAW,GAlBQ,4CAAH,sDAsBlB,OACC,yBAAK0B,UAAU,QACd,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,aACd,kBAAC,IAAD,CAAMC,GAAIC,KACT,wBAAIF,UAAU,QAAd,YAED,yBAAKA,UAAU,WACd,yBAAKA,UAAU,aACd,uCAEA,kBAACG,EAAA,EAAD,CAAMC,YAAU,EAACC,SAAUtB,GAC1B,kBAACoB,EAAA,EAAKG,IAAN,KACC,kBAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,sBACrB,kBAACL,EAAA,EAAKM,MAAN,CAAYT,UAAU,WAAtB,iBACA,kBAACG,EAAA,EAAKO,QAAN,CACCC,KAAK,QACLX,UAAU,2BACVY,YAAY,mBACZC,MAAO5C,EACP6C,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc7C,EAAS6C,EAAOF,QACxCG,YAAazC,EAAMN,QAEpB,kBAACkC,EAAA,EAAKO,QAAQO,SAAd,CAAuBN,KAAK,WAAWpC,EAAMN,QAG9C,kBAACkC,EAAA,EAAKI,MAAN,CAAYC,UAAU,sBACrB,kBAACL,EAAA,EAAKM,MAAN,CAAYT,UAAU,WAAtB,YACA,kBAACG,EAAA,EAAKO,QAAN,CACCC,KAAMlC,EAAgB,OAAS,WAC/BuB,UAAU,2BACVY,YAAY,cACZC,MAAO1C,EACP2C,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc3C,EAAY2C,EAAOF,QAC3CG,YAAazC,EAAMJ,WAEpB,uBAAG+C,QA9DqB,WAC/BxC,GAAiBD,KA6D4Bf,GACtC,kBAACyC,EAAA,EAAKO,QAAQO,SAAd,CAAuBN,KAAK,WAAWpC,EAAMJ,YAI/C,kBAACgD,EAAA,EAAD,CAAQR,KAAK,SAASX,UAAU,MAAMoB,WAAY/C,GAChDA,EAAU,kBAAC,IAAD,MAAiB,WAE7B,kBAAC,IAAD,CAAM4B,GAAIoB,KACT,uBAAGrB,UAAU,cAAb,2BAED,kBAAC,IAAD,CAAMC,GAAIqB,KACT,uBAAGtB,UAAU,cAAb,2BChGOnC","file":"static/js/Login Page.83c425d9.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {FORGOT_PASSWORD, HOME, CHATS, REGISTER} from '../routes/constants';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faEye} from '@fortawesome/free-solid-svg-icons';\nimport {Formloader} from '../loader';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport {makePostReq} from '../api';\nimport {Toast} from '../loader';\nimport {useAuth} from '../routes/Auth';\n\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\nconst Login = () => {\n\tconst history = useHistory();\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState({});\n\tconst [passwordShown, setPasswordShown] = useState(false);\n\n\tconst {setAuthTokens, setUserData, setIsLogged} = useAuth();\n\n\tconst togglePasswordVisiblity = () => {\n\t\tsetPasswordShown(passwordShown ? false : true);\n\t};\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tif (email.trim() === '') {\n\t\t\tsetError({email: 'You must enter an email address!'});\n\t\t} else if (password.trim() === '') {\n\t\t\tsetError({password: 'You must enter a password!'});\n\t\t} else {\n\t\t\tsetLoading(true);\n\t\t\tconst {status, message, data} = await makePostReq('user/login', {email, password});\n\t\t\tToast(status, message);\n\t\t\tif (status === 'ok') {\n\t\t\t\tconst token = `Bearer ${data.token}`;\n\t\t\t\tsetAuthTokens(token);\n\t\t\t\tsetUserData(data.userData);\n\t\t\t\tlocalStorage.setItem('username', data.userData.username);\n\t\t\t\tsetIsLogged(true);\n\t\t\t\thistory.push(CHATS);\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='main'>\n\t\t\t<div className='cover black'></div>\n\t\t\t<div className='container'>\n\t\t\t\t<Link to={HOME}>\n\t\t\t\t\t<h1 className='logo'>Mensaje</h1>\n\t\t\t\t</Link>\n\t\t\t\t<div className='content'>\n\t\t\t\t\t<div className='subscribe'>\n\t\t\t\t\t\t<h4>Sign In</h4>\n\n\t\t\t\t\t\t<Form noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t\t\t<Form.Group controlId='validationCustom02'>\n\t\t\t\t\t\t\t\t\t<Form.Label className='sr-only'>Email Address</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\tclassName='form-control transparent'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Email Address...'\n\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\tonChange={({target}) => setEmail(target.value)}\n\t\t\t\t\t\t\t\t\t\tisInvalid={!!error.email}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>{error.email}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group controlId='validationCustom02'>\n\t\t\t\t\t\t\t\t\t<Form.Label className='sr-only'>Password</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype={passwordShown ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\t\tclassName='form-control transparent'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Password...'\n\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\tonChange={({target}) => setPassword(target.value)}\n\t\t\t\t\t\t\t\t\t\tisInvalid={!!error.password}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<i onClick={togglePasswordVisiblity}>{eye}</i>\n\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>{error.password}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Form.Row>\n\n\t\t\t\t\t\t\t<Button type='submit' className='btn' disabled={!!loading}>\n\t\t\t\t\t\t\t\t{loading ? <Formloader /> : 'Sign In'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Link to={REGISTER}>\n\t\t\t\t\t\t\t\t<p className='text-right'>Don't have an account?</p>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link to={FORGOT_PASSWORD}>\n\t\t\t\t\t\t\t\t<p className='text-right'>Forgot password?</p>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default Login;\n","import Login from './Login';\n\nexport default Login;\n"],"sourceRoot":""}